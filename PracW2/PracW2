{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPfss74Oboqns+frxX+Nq9I"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YKRXtyPGuWRE","executionInfo":{"status":"ok","timestamp":1677710423619,"user_tz":-600,"elapsed":413683,"user":{"displayName":"Linh Le (TahRin)","userId":"17567813382401776483"}},"outputId":"df31cb6f-f779-4948-e498-abc724b47a6a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n","/content/drive/My Drive/Tutoring Courses/DCOMP4702\n","\u001b[0m\u001b[01;34mPracW2\u001b[0m/\n","/content/drive/My Drive/Tutoring Courses/DCOMP4702/PracW2\n","pokemonsrt.csv  PracW2  PracW2_2023.pdf  seedlings.csv  Snakes.xlsx\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')\n","%cd /content/drive/My Drive/Tutoring Courses/DCOMP4702\n","%ls\n","%cd PracW2/\n","%ls\n"]},{"cell_type":"code","source":["import pandas as pd\n","# import chardet\n","# !pip install --upgrade pandas"],"metadata":{"id":"jVcwjXF6yuuC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","df1 = pd.read_csv(\"pokemonsrt.csv\")\n","df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"8kYmmPqkw3dA","executionInfo":{"status":"ok","timestamp":1677623306443,"user_tz":-600,"elapsed":1114,"user":{"displayName":"Linh Le (TahRin)","userId":"17567813382401776483"}},"outputId":"3bd67485-3c1f-44a6-ebe2-bc1d4ac691fb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    POPULATION SEX   DATE  BODY MASS     LOGBM    SVL    LOGSVL\n","0         SWAN   F  39481       50.0  1.698970   66.0  1.819544\n","1      HOPKINS   M  39106       76.0  1.880814   62.0  1.792392\n","2      HOPKINS   F  39105       78.0  1.892095   60.5  1.781755\n","3      HOPKINS   F  39106       82.0  1.913814   64.5  1.809560\n","4      TREFOIL   M  39494       83.0  1.919078   66.0  1.819544\n","..         ...  ..    ...        ...       ...    ...       ...\n","592   TASMANIA   M    NaN        NaN       NaN   96.0  1.982271\n","593   TASMANIA   F    NaN        NaN       NaN  111.0  2.045323\n","594   TASMANIA   M    NaN        NaN       NaN  123.0  2.089905\n","595   WILLIAMS   M    NaN        NaN       NaN   87.0  1.939519\n","596   WILLIAMS   M    NaN        NaN       NaN   87.0  1.939519\n","\n","[597 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-aa2273e1-30df-4c47-9c60-6c9e5613d9fc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>POPULATION</th>\n","      <th>SEX</th>\n","      <th>DATE</th>\n","      <th>BODY MASS</th>\n","      <th>LOGBM</th>\n","      <th>SVL</th>\n","      <th>LOGSVL</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>SWAN</td>\n","      <td>F</td>\n","      <td>39481</td>\n","      <td>50.0</td>\n","      <td>1.698970</td>\n","      <td>66.0</td>\n","      <td>1.819544</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>HOPKINS</td>\n","      <td>M</td>\n","      <td>39106</td>\n","      <td>76.0</td>\n","      <td>1.880814</td>\n","      <td>62.0</td>\n","      <td>1.792392</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>HOPKINS</td>\n","      <td>F</td>\n","      <td>39105</td>\n","      <td>78.0</td>\n","      <td>1.892095</td>\n","      <td>60.5</td>\n","      <td>1.781755</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>HOPKINS</td>\n","      <td>F</td>\n","      <td>39106</td>\n","      <td>82.0</td>\n","      <td>1.913814</td>\n","      <td>64.5</td>\n","      <td>1.809560</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>TREFOIL</td>\n","      <td>M</td>\n","      <td>39494</td>\n","      <td>83.0</td>\n","      <td>1.919078</td>\n","      <td>66.0</td>\n","      <td>1.819544</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>592</th>\n","      <td>TASMANIA</td>\n","      <td>M</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>96.0</td>\n","      <td>1.982271</td>\n","    </tr>\n","    <tr>\n","      <th>593</th>\n","      <td>TASMANIA</td>\n","      <td>F</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>111.0</td>\n","      <td>2.045323</td>\n","    </tr>\n","    <tr>\n","      <th>594</th>\n","      <td>TASMANIA</td>\n","      <td>M</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>123.0</td>\n","      <td>2.089905</td>\n","    </tr>\n","    <tr>\n","      <th>595</th>\n","      <td>WILLIAMS</td>\n","      <td>M</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>87.0</td>\n","      <td>1.939519</td>\n","    </tr>\n","    <tr>\n","      <th>596</th>\n","      <td>WILLIAMS</td>\n","      <td>M</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>87.0</td>\n","      <td>1.939519</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>597 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aa2273e1-30df-4c47-9c60-6c9e5613d9fc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-aa2273e1-30df-4c47-9c60-6c9e5613d9fc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-aa2273e1-30df-4c47-9c60-6c9e5613d9fc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df = pd.read_csv(\"seedlings.csv\")\n","df = df[[\"Harv\",\"Block\",\"Trmt\"]]"],"metadata":{"id":"nq_A9gtgytgB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["xls = pd.ExcelFile('Snakes.xlsx')\n","\n","# Now you can list all sheets in the file\n","print(xls.sheet_names)\n","# ['Adult Tiger snakes', 'Mothers litters and neonates', 'Prey', 'Growth experiment']\n","sheet_to_df_map = {}\n","for sheet_name in xls.sheet_names:\n","    sheet_to_df_map[sheet_name] = xls.parse(sheet_name)\n","    print(xls.parse(sheet_name).keys())\n","# to read just one sheet to dataframe:\n","df = pd.read_excel('Snakes.xlsx', sheet_name='Adult Tiger snakes')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DUZNnjf42CBX","executionInfo":{"status":"ok","timestamp":1677618644727,"user_tz":-600,"elapsed":660,"user":{"displayName":"Linh Le (TahRin)","userId":"17567813382401776483"}},"outputId":"f9a7ec75-2725-42e6-eac3-7a5d6db1ca9c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['Adult Tiger snakes', 'Mothers litters and neonates', 'Prey', 'Growth experiment']\n","Index(['POPULATION', 'SEX', 'DATE', 'BODY MASS', 'LOGBM', 'SVL', 'LOGSVL'], dtype='object')\n","Index(['POPULATION', 'MOTHER', 'BIRTH DATE', 'Log SVL', 'Bmpre', 'Log Bmpre',\n","       'BCI', 'Bmpost', 'Log Bmpost', 'BM-Bmpost', 'RCM',\n","       'MEAN LITTER BODY MASS', 'LOG BM', 'MEAN LITTER SVL', 'LOG SVL',\n","       'MEAN LITTER JAW', 'LOG JAW'],\n","      dtype='object')\n","Index(['PREY TYPE', 'BODY MASS', 'MAX CIRCUMFERENCE'], dtype='object')\n","Index(['POPULATION', 'MOTHER', 'BB', 'SEX', 'BIRTH DATE', 'BODY MASS', 'SVL',\n","       'DATE', 'BCI', 'BODY MASS.1', 'SVL.1', 'DATE.1', 'BODY MASS.2', 'SVL.2',\n","       'DATE.2', 'BODY MASS.3', 'SVL.3', 'DATE.3', 'BODY MASS.4', 'SVL.4',\n","       'TOTAL GROWTH IN BODY MASS', 'INCREASE IN BODY MASS PER G OF FOOD',\n","       'INCREASE IN BODY MASS PER DAY', 'TOTAL GROWTH IN SVL',\n","       'INCREASE IN SVL PER G OF FOOD', 'INCREASE IN SVL PER DAY',\n","       'TOTAL FOOD', 'LENGTH OF EXPERIMENT'],\n","      dtype='object')\n"]}]},{"cell_type":"markdown","source":["(a)https://www.datacamp.com/tutorial/categorical-data\n","(b)Analyse some numerical statistics of each feature in the dataset, e.g. the number of null values, minimum/maximum values, frequency of classes or values, standard deviation. These will inform your pre-processing decisions such as filling in (imputing) missing values, removing outliers, or normalising features."],"metadata":{"id":"zzu4ffyQ39lf"}},{"cell_type":"markdown","source":[],"metadata":{"id":"rgn096qHR50M"}},{"cell_type":"markdown","source":["(Q2a) If there are missing values in your data -> remove the rows or columns that contain missing values"],"metadata":{"id":"9_2WFIaL4WO4"}},{"cell_type":"markdown","source":["(Q2b)strategystr, default=’mean’\n","\n","    The imputation strategy.\n","\n","        If “mean”, then replace missing values using the mean along each column. Can only be used with numeric data.\n","\n","        If “median”, then replace missing values using the median along each column. Can only be used with numeric data.\n","\n","        If “most_frequent”, then replace missing using the most frequent value along each column. Can be used with strings or numeric data. If there is more than one such value, only the smallest is returned.\n","\n","        If “constant”, then replace missing values with fill_value. Can be used with strings or numeric data.\n","\n","    New in version 0.20: strategy=”constant” for fixed value imputation.\n","fill_valuestr or numerical value, default=None\n","\n","    When strategy == “constant”, fill_value is used to replace all occurrences of missing_values. For string or object data types, fill_value must be a string. If None, fill_value will be 0 when imputing numerical data and “missing_value” for strings or object data types.\n"],"metadata":{"id":"OWOjjsI77slB"}},{"cell_type":"code","source":["import numpy as np\n","from sklearn.impute import SimpleImputer\n","imp_mean = SimpleImputer(missing_values=np.nan, strategy='most_frequent')\n","imp_mean.fit(df)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wAKp_c4w6yVU","executionInfo":{"status":"ok","timestamp":1677569508715,"user_tz":-600,"elapsed":365,"user":{"displayName":"Linh Le (TahRin)","userId":"17567813382401776483"}},"outputId":"633a97ca-59d7-4ea6-a547-a7c8153892f3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["SimpleImputer(strategy='most_frequent')"]},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["LabelEncoder can be used to normalize labels.\n","\n","from sklearn import preprocessing \n","le = preprocessing.LabelEncoder()\n","le.fit([1, 2, 2, 6])\n","LabelEncoder()\n","le.classes_\n","array([1, 2, 6])\n","le.transform([1, 1, 2, 6])\n","array([0, 0, 1, 2]...)\n","le.inverse_transform([0, 0, 1, 2])\n","array([1, 1, 2, 6])\n","\n","It can also be used to transform non-numerical labels (as long as they are hashable and comparable) to numerical labels.\n","\n","\n","le = preprocessing.LabelEncoder()\n","le.fit([\"paris\", \"paris\", \"tokyo\", \"amsterdam\"])\n","LabelEncoder()\n","list(le.classes_)\n","['amsterdam', 'paris', 'tokyo']\n","le.transform([\"tokyo\", \"tokyo\", \"paris\"])\n","array([2, 2, 1]...)\n","list(le.inverse_transform([2, 2, 1]))\n","['tokyo', 'tokyo', 'paris']\n","\n"],"metadata":{"id":"J1MBsdK57UkK"}},{"cell_type":"code","source":["from sklearn import preprocessing\n","le = preprocessing.LabelEncoder() \n","le.fit([\"paris\", \"paris\", \"tokyo\", \"amsterdam\"])\n","print(list(le.classes_))\n","le.transform([\"tokyo\", \"tokyo\", \"paris\"])\n","print(list(le.inverse_transform([2, 2, 1])))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2wdEHit-75Bc","executionInfo":{"status":"ok","timestamp":1677569679948,"user_tz":-600,"elapsed":19,"user":{"displayName":"Linh Le (TahRin)","userId":"17567813382401776483"}},"outputId":"d8a698eb-e3a0-40a6-efdd-0e5052204b76"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['amsterdam', 'paris', 'tokyo']\n","['tokyo', 'tokyo', 'paris']\n"]}]},{"cell_type":"code","source":["df=df.dropna()#.values\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":468},"id":"hzHL4Kxt4j-D","executionInfo":{"status":"ok","timestamp":1677568964906,"user_tz":-600,"elapsed":482,"user":{"displayName":"Linh Le (TahRin)","userId":"17567813382401776483"}},"outputId":"e9597144-5b28-4b97-fe49-17164f71af16"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Spec  Harv  Block  Trmt  K  Mg  Height  Diameter  N_leaves  Leaf Area  \\\n","64    Mb     2      1     1  1   1    69.5     10.29      36.0      509.0   \n","65    Mb     2      1     2  1   2    62.0      9.48      23.0      393.0   \n","66    Mb     2      1     3  1   3   106.0     10.92      43.0     1475.0   \n","67    Mb     2      1     4  1   4    69.0     10.49      28.0      487.0   \n","68    Mb     2      1     5  2   1    71.0     10.61      52.0      820.0   \n","..   ...   ...    ...   ... ..  ..     ...       ...       ...        ...   \n","187   Mb     3      4    12  3   4    50.0      9.43      23.0      247.0   \n","188   Mb     3      4    13  4   1    51.0      8.71      21.0      354.0   \n","189   Mb     3      4    14  4   2    53.0     10.38      19.0      205.0   \n","190   Mb     3      4    15  4   3    50.0     12.19      40.0      438.0   \n","191   Mb     3      4    16  4   4    44.0     10.40      24.0      355.0   \n","\n","     ...  DM_leaves  DM_stem  DM_roots  DM_total     Shock  P_conc_L  \\\n","64   ...        6.8     12.0      12.8      31.6  0.225806     0.859   \n","65   ...        5.6     11.7      11.0      28.3  0.000000     0.573   \n","66   ...        8.4     16.2      12.5      37.1  0.062500     0.875   \n","67   ...        6.4     14.4      10.9      31.7  0.150000     0.726   \n","68   ...        8.6     15.2      13.9      37.7  0.066667     0.865   \n","..   ...        ...      ...       ...       ...       ...       ...   \n","187  ...        4.3     11.1      10.5      25.9  1.000000     0.748   \n","188  ...        4.8      6.2       7.2      18.2  1.000000     1.122   \n","189  ...        4.0     12.2      10.9      27.1  0.250000     0.807   \n","190  ...        6.2     13.4      13.7      33.3  1.000000     1.179   \n","191  ...        5.4     12.7      12.6      30.7  0.531250     0.767   \n","\n","     N_conc_L  Ca_conc_L  K_conc_L  Mg_conc_L  \n","64      17.67      5.074     4.743      0.860  \n","65      16.40      8.264     4.140      5.723  \n","66      12.84     10.710     5.070      7.316  \n","67      15.95      8.712     5.665      5.624  \n","68      17.02      5.573    12.820      1.566  \n","..        ...        ...       ...        ...  \n","187     18.40      7.436     7.448      6.985  \n","188     17.84      6.073    13.190      1.429  \n","189     20.43      7.286     7.410      4.228  \n","190     19.13      5.087     9.051      7.081  \n","191     18.25      8.057     7.771      5.562  \n","\n","[121 rows x 21 columns]"],"text/html":["\n","  <div id=\"df-08f55da6-c558-4be4-9ca1-1df4c9afb97e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Spec</th>\n","      <th>Harv</th>\n","      <th>Block</th>\n","      <th>Trmt</th>\n","      <th>K</th>\n","      <th>Mg</th>\n","      <th>Height</th>\n","      <th>Diameter</th>\n","      <th>N_leaves</th>\n","      <th>Leaf Area</th>\n","      <th>...</th>\n","      <th>DM_leaves</th>\n","      <th>DM_stem</th>\n","      <th>DM_roots</th>\n","      <th>DM_total</th>\n","      <th>Shock</th>\n","      <th>P_conc_L</th>\n","      <th>N_conc_L</th>\n","      <th>Ca_conc_L</th>\n","      <th>K_conc_L</th>\n","      <th>Mg_conc_L</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>64</th>\n","      <td>Mb</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>69.5</td>\n","      <td>10.29</td>\n","      <td>36.0</td>\n","      <td>509.0</td>\n","      <td>...</td>\n","      <td>6.8</td>\n","      <td>12.0</td>\n","      <td>12.8</td>\n","      <td>31.6</td>\n","      <td>0.225806</td>\n","      <td>0.859</td>\n","      <td>17.67</td>\n","      <td>5.074</td>\n","      <td>4.743</td>\n","      <td>0.860</td>\n","    </tr>\n","    <tr>\n","      <th>65</th>\n","      <td>Mb</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>62.0</td>\n","      <td>9.48</td>\n","      <td>23.0</td>\n","      <td>393.0</td>\n","      <td>...</td>\n","      <td>5.6</td>\n","      <td>11.7</td>\n","      <td>11.0</td>\n","      <td>28.3</td>\n","      <td>0.000000</td>\n","      <td>0.573</td>\n","      <td>16.40</td>\n","      <td>8.264</td>\n","      <td>4.140</td>\n","      <td>5.723</td>\n","    </tr>\n","    <tr>\n","      <th>66</th>\n","      <td>Mb</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>106.0</td>\n","      <td>10.92</td>\n","      <td>43.0</td>\n","      <td>1475.0</td>\n","      <td>...</td>\n","      <td>8.4</td>\n","      <td>16.2</td>\n","      <td>12.5</td>\n","      <td>37.1</td>\n","      <td>0.062500</td>\n","      <td>0.875</td>\n","      <td>12.84</td>\n","      <td>10.710</td>\n","      <td>5.070</td>\n","      <td>7.316</td>\n","    </tr>\n","    <tr>\n","      <th>67</th>\n","      <td>Mb</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>69.0</td>\n","      <td>10.49</td>\n","      <td>28.0</td>\n","      <td>487.0</td>\n","      <td>...</td>\n","      <td>6.4</td>\n","      <td>14.4</td>\n","      <td>10.9</td>\n","      <td>31.7</td>\n","      <td>0.150000</td>\n","      <td>0.726</td>\n","      <td>15.95</td>\n","      <td>8.712</td>\n","      <td>5.665</td>\n","      <td>5.624</td>\n","    </tr>\n","    <tr>\n","      <th>68</th>\n","      <td>Mb</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>71.0</td>\n","      <td>10.61</td>\n","      <td>52.0</td>\n","      <td>820.0</td>\n","      <td>...</td>\n","      <td>8.6</td>\n","      <td>15.2</td>\n","      <td>13.9</td>\n","      <td>37.7</td>\n","      <td>0.066667</td>\n","      <td>0.865</td>\n","      <td>17.02</td>\n","      <td>5.573</td>\n","      <td>12.820</td>\n","      <td>1.566</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>187</th>\n","      <td>Mb</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>12</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>50.0</td>\n","      <td>9.43</td>\n","      <td>23.0</td>\n","      <td>247.0</td>\n","      <td>...</td>\n","      <td>4.3</td>\n","      <td>11.1</td>\n","      <td>10.5</td>\n","      <td>25.9</td>\n","      <td>1.000000</td>\n","      <td>0.748</td>\n","      <td>18.40</td>\n","      <td>7.436</td>\n","      <td>7.448</td>\n","      <td>6.985</td>\n","    </tr>\n","    <tr>\n","      <th>188</th>\n","      <td>Mb</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>13</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>51.0</td>\n","      <td>8.71</td>\n","      <td>21.0</td>\n","      <td>354.0</td>\n","      <td>...</td>\n","      <td>4.8</td>\n","      <td>6.2</td>\n","      <td>7.2</td>\n","      <td>18.2</td>\n","      <td>1.000000</td>\n","      <td>1.122</td>\n","      <td>17.84</td>\n","      <td>6.073</td>\n","      <td>13.190</td>\n","      <td>1.429</td>\n","    </tr>\n","    <tr>\n","      <th>189</th>\n","      <td>Mb</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>14</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>53.0</td>\n","      <td>10.38</td>\n","      <td>19.0</td>\n","      <td>205.0</td>\n","      <td>...</td>\n","      <td>4.0</td>\n","      <td>12.2</td>\n","      <td>10.9</td>\n","      <td>27.1</td>\n","      <td>0.250000</td>\n","      <td>0.807</td>\n","      <td>20.43</td>\n","      <td>7.286</td>\n","      <td>7.410</td>\n","      <td>4.228</td>\n","    </tr>\n","    <tr>\n","      <th>190</th>\n","      <td>Mb</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>15</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>50.0</td>\n","      <td>12.19</td>\n","      <td>40.0</td>\n","      <td>438.0</td>\n","      <td>...</td>\n","      <td>6.2</td>\n","      <td>13.4</td>\n","      <td>13.7</td>\n","      <td>33.3</td>\n","      <td>1.000000</td>\n","      <td>1.179</td>\n","      <td>19.13</td>\n","      <td>5.087</td>\n","      <td>9.051</td>\n","      <td>7.081</td>\n","    </tr>\n","    <tr>\n","      <th>191</th>\n","      <td>Mb</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>16</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>44.0</td>\n","      <td>10.40</td>\n","      <td>24.0</td>\n","      <td>355.0</td>\n","      <td>...</td>\n","      <td>5.4</td>\n","      <td>12.7</td>\n","      <td>12.6</td>\n","      <td>30.7</td>\n","      <td>0.531250</td>\n","      <td>0.767</td>\n","      <td>18.25</td>\n","      <td>8.057</td>\n","      <td>7.771</td>\n","      <td>5.562</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>121 rows × 21 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-08f55da6-c558-4be4-9ca1-1df4c9afb97e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-08f55da6-c558-4be4-9ca1-1df4c9afb97e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-08f55da6-c558-4be4-9ca1-1df4c9afb97e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["X = df.iloc[:, 6].values\n","y = df.iloc[:, 7].values"],"metadata":{"id":"8RX4g9Gb5dgo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt"],"metadata":{"id":"k2-oE2sA57Rz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.scatter(X,y,marker=\"*\",color=\"red\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"id":"7gj1lVZ-5-PN","executionInfo":{"status":"ok","timestamp":1677569066756,"user_tz":-600,"elapsed":418,"user":{"displayName":"Linh Le (TahRin)","userId":"17567813382401776483"}},"outputId":"8d389f55-21f9-4765-eb11-a3b6420e397d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x7f2322655d60>"]},"metadata":{},"execution_count":27},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["https://www.codecademy.com/article/seaborn-design-i\n"],"metadata":{"id":"2msvhaNy_YgB"}},{"cell_type":"code","source":["import seaborn as sns\n","df = pd.read_csv(\"seedlings.csv\")\n","df = df[[\"Harv\",\"Block\",\"Trmt\"]]\n","sns.set(style=\"ticks\", color_codes=True)\n","# iris = sns.load_dataset(\"iris\")\n","# g = sns.pairplot(iris)\n","g = sns.pairplot(df)\n","\n","\n","import matplotlib.pyplot as plt\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":548},"id":"NAoWn-tX6wD5","executionInfo":{"status":"ok","timestamp":1677624680019,"user_tz":-600,"elapsed":4050,"user":{"displayName":"Linh Le (TahRin)","userId":"17567813382401776483"}},"outputId":"2d2bd587-505b-4175-c264-60d158b41817"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 540x540 with 12 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["h = sns.histplot(df)\n","\n","\n","import matplotlib.pyplot as plt\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":268},"id":"wxTC8a5r-zVm","executionInfo":{"status":"ok","timestamp":1677570307734,"user_tz":-600,"elapsed":2145,"user":{"displayName":"Linh Le (TahRin)","userId":"17567813382401776483"}},"outputId":"7ee8f05b-5bc1-4194-bf4f-2b35e20f1be8"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df1.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":352},"id":"Ppt-WH8OJEO5","executionInfo":{"status":"ok","timestamp":1677623323524,"user_tz":-600,"elapsed":395,"user":{"displayName":"Linh Le (TahRin)","userId":"17567813382401776483"}},"outputId":"12d78c0f-d149-41aa-9cd7-99dcf9c93754"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                         abilities  against_bug  against_dark  against_dragon  \\\n","0      ['Shield Dust', 'Run Away']          1.0           1.0             1.0   \n","1                    ['Shed Skin']          1.0           1.0             1.0   \n","2  ['Compoundeyes', 'Tinted Lens']          0.5           1.0             1.0   \n","3      ['Shield Dust', 'Run Away']          0.5           1.0             1.0   \n","4                    ['Shed Skin']          0.5           1.0             1.0   \n","\n","   against_electric  against_fairy  against_fight  against_fire  \\\n","0               1.0            1.0           0.50           2.0   \n","1               1.0            1.0           0.50           2.0   \n","2               2.0            1.0           0.25           2.0   \n","3               1.0            0.5           0.25           2.0   \n","4               1.0            0.5           0.25           2.0   \n","\n","   against_flying  against_ghost  ...  percentage_male  pokedex_number  \\\n","0             2.0            1.0  ...             50.0              10   \n","1             2.0            1.0  ...             50.0              11   \n","2             2.0            1.0  ...             50.0              12   \n","3             2.0            1.0  ...             50.0              13   \n","4             2.0            1.0  ...             50.0              14   \n","\n","   sp_attack  sp_defense  speed  type1   type2  weight_kg  generation  \\\n","0         20          20     45    bug     NaN        2.9           1   \n","1         25          25     30    bug     NaN        9.9           1   \n","2         90          80     70    bug  flying       32.0           1   \n","3         20          20     50    bug  poison        3.2           1   \n","4         25          25     35    bug  poison       10.0           1   \n","\n","   is_legendary  \n","0             0  \n","1             0  \n","2             0  \n","3             0  \n","4             0  \n","\n","[5 rows x 41 columns]"],"text/html":["\n","  <div id=\"df-ee723188-56b0-4b41-9d45-05d136ed2354\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>abilities</th>\n","      <th>against_bug</th>\n","      <th>against_dark</th>\n","      <th>against_dragon</th>\n","      <th>against_electric</th>\n","      <th>against_fairy</th>\n","      <th>against_fight</th>\n","      <th>against_fire</th>\n","      <th>against_flying</th>\n","      <th>against_ghost</th>\n","      <th>...</th>\n","      <th>percentage_male</th>\n","      <th>pokedex_number</th>\n","      <th>sp_attack</th>\n","      <th>sp_defense</th>\n","      <th>speed</th>\n","      <th>type1</th>\n","      <th>type2</th>\n","      <th>weight_kg</th>\n","      <th>generation</th>\n","      <th>is_legendary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>['Shield Dust', 'Run Away']</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.50</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>50.0</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>20</td>\n","      <td>45</td>\n","      <td>bug</td>\n","      <td>NaN</td>\n","      <td>2.9</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>['Shed Skin']</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.50</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>50.0</td>\n","      <td>11</td>\n","      <td>25</td>\n","      <td>25</td>\n","      <td>30</td>\n","      <td>bug</td>\n","      <td>NaN</td>\n","      <td>9.9</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>['Compoundeyes', 'Tinted Lens']</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>0.25</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>50.0</td>\n","      <td>12</td>\n","      <td>90</td>\n","      <td>80</td>\n","      <td>70</td>\n","      <td>bug</td>\n","      <td>flying</td>\n","      <td>32.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>['Shield Dust', 'Run Away']</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>0.25</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>50.0</td>\n","      <td>13</td>\n","      <td>20</td>\n","      <td>20</td>\n","      <td>50</td>\n","      <td>bug</td>\n","      <td>poison</td>\n","      <td>3.2</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>['Shed Skin']</td>\n","      <td>0.5</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.5</td>\n","      <td>0.25</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>50.0</td>\n","      <td>14</td>\n","      <td>25</td>\n","      <td>25</td>\n","      <td>35</td>\n","      <td>bug</td>\n","      <td>poison</td>\n","      <td>10.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 41 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ee723188-56b0-4b41-9d45-05d136ed2354')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ee723188-56b0-4b41-9d45-05d136ed2354 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ee723188-56b0-4b41-9d45-05d136ed2354');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df1['type2']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U2rYm6T7JD4C","executionInfo":{"status":"ok","timestamp":1677623405366,"user_tz":-600,"elapsed":359,"user":{"displayName":"Linh Le (TahRin)","userId":"17567813382401776483"}},"outputId":"2b98715e-df17-4d60-def0-8144582ae217"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0          NaN\n","1          NaN\n","2       flying\n","3       poison\n","4       poison\n","        ...   \n","796        bug\n","797        bug\n","798        NaN\n","799    psychic\n","800      fairy\n","Name: type2, Length: 801, dtype: object"]},"metadata":{},"execution_count":12}]}]}